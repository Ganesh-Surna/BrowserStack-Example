{"ast":null,"code":"\"use client\";\n\n// src/useSuspenseInfiniteQuery.ts\nimport _objectSpread from \"C:/Users/GaneshSurna/Desktop/New React/Practice_routes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { InfiniteQueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useSuspenseInfiniteQuery(options, queryClient) {\n  return useBaseQuery(_objectSpread(_objectSpread({}, options), {}, {\n    enabled: true,\n    suspense: true,\n    throwOnError: true\n  }),\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n  InfiniteQueryObserver, queryClient);\n}\nexport { useSuspenseInfiniteQuery };","map":{"version":3,"names":["InfiniteQueryObserver","useBaseQuery","useSuspenseInfiniteQuery","options","queryClient","_objectSpread","enabled","suspense","throwOnError"],"sources":["C:\\Users\\GaneshSurna\\Desktop\\New React\\Practice_routes\\node_modules\\@tanstack\\react-query\\src\\useSuspenseInfiniteQuery.ts"],"sourcesContent":["'use client'\nimport { InfiniteQueryObserver } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type {\n  InfiniteQueryObserverSuccessResult,\n  QueryObserver,\n} from '@tanstack/query-core'\nimport type {\n  DefaultError,\n  InfiniteData,\n  QueryClient,\n  QueryKey,\n} from '@tanstack/query-core'\nimport type {\n  UseSuspenseInfiniteQueryOptions,\n  UseSuspenseInfiniteQueryResult,\n} from './types'\n\nexport function useSuspenseInfiniteQuery<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: UseSuspenseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryFnData,\n    TQueryKey,\n    TPageParam\n  >,\n  queryClient?: QueryClient,\n): UseSuspenseInfiniteQueryResult<TData, TError> {\n  return useBaseQuery(\n    {\n      ...options,\n      enabled: true,\n      suspense: true,\n      throwOnError: true,\n    },\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    InfiniteQueryObserver as typeof QueryObserver,\n    queryClient,\n  ) as InfiniteQueryObserverSuccessResult<TData, TError>\n}\n"],"mappings":";;;;AACA,SAASA,qBAAA,QAA6B;AACtC,SAASC,YAAA,QAAoB;AAgBtB,SAASC,yBAOdC,OAAA,EAQAC,WAAA,EAC+C;EAC/C,OAAOH,YAAA,CAAAI,aAAA,CAAAA,aAAA,KAEAF,OAAA;IACHG,OAAA,EAAS;IACTC,QAAA,EAAU;IACVC,YAAA,EAAc;EAAA;EAChB;EAEAR,qBAAA,EACAI,WACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}