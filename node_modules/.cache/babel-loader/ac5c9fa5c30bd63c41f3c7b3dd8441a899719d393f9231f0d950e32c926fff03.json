{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GaneshSurna\\\\Desktop\\\\New React\\\\Practice_routes\\\\src\\\\components\\\\Dashboard\\\\TestCases.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { fetchEvents } from \"../../util/http\";\nimport TestCaseItem from \"./TestCaseItem\";\nimport { Outlet } from \"react-router-dom\";\nimport ErrorBlock from \"../ErrorBlock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TestCases() {\n  _s();\n  var _this = this;\n  var _useQuery = useQuery({\n      queryKey: [\"events\"],\n      queryFn: fetchEvents,\n      staleTime: 10000\n    }),\n    data = _useQuery.data,\n    isPending = _useQuery.isPending,\n    isError = _useQuery.isError,\n    error = _useQuery.error;\n  var content;\n  if (isPending) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this);\n  }\n  if (isError) {\n    var _error$info;\n    content = /*#__PURE__*/_jsxDEV(ErrorBlock, {\n      message: ((_error$info = error.info) === null || _error$info === void 0 ? void 0 : _error$info.message) || \"Failed to fetch events!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this);\n  }\n  if (data) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thead\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tr\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"TITLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), data.map(function (event) {\n        return /*#__PURE__*/_jsxDEV(TestCaseItem, {\n          event: event\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Test Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field-content\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(TestCases, \"sya+bT1YjvzwgWaxYC1/mzRV1pU=\", false, function () {\n  return [useQuery];\n});\n_c = TestCases;\nvar _c;\n$RefreshReg$(_c, \"TestCases\");","map":{"version":3,"names":["useQuery","fetchEvents","TestCaseItem","Outlet","ErrorBlock","jsxDEV","_jsxDEV","Fragment","_Fragment","TestCases","_s","_this","_useQuery","queryKey","queryFn","staleTime","data","isPending","isError","error","content","children","fileName","_jsxFileName","lineNumber","columnNumber","_error$info","message","info","className","map","event","id","_c","$RefreshReg$"],"sources":["C:/Users/GaneshSurna/Desktop/New React/Practice_routes/src/components/Dashboard/TestCases.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { fetchEvents } from \"../../util/http\"\r\nimport TestCaseItem from \"./TestCaseItem\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport ErrorBlock from \"../ErrorBlock\";\r\n\r\nexport default function TestCases(){\r\n\r\n    const {data, isPending, isError, error} = useQuery({\r\n        queryKey: [\"events\"],\r\n        queryFn: fetchEvents,\r\n        staleTime: 10000,\r\n    })\r\n\r\n    let content;\r\n\r\n    if(isPending){\r\n        content=<p>Loading...</p>\r\n    }\r\n    if(isError){\r\n        content=<ErrorBlock message={error.info?.message || \"Failed to fetch events!!\"}/>\r\n    }\r\n    if(data){\r\n        content=(\r\n            <div className=\"table\">\r\n                <div className=\"thead\">\r\n                    <div className=\"tr\">\r\n                        <h3>ID</h3>\r\n                        <h3>TITLE</h3>\r\n                    </div>\r\n                </div>\r\n                {data.map((event)=>{\r\n                    return <TestCaseItem event={event} key={event.id}/>\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Outlet/>\r\n        <div className=\"field-container\">\r\n            <div className=\"field-header\">\r\n                <h1>Test Cases</h1>\r\n            </div>\r\n            <div className=\"field-content\">\r\n                {content}\r\n            </div>\r\n        </div>\r\n    </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}