{"ast":null,"code":"// src/queryOptions.ts\nfunction queryOptions(options) {\n  return options;\n}\nexport { queryOptions };","map":{"version":3,"names":["queryOptions","options"],"sources":["C:\\Users\\GaneshSurna\\Desktop\\New React\\Practice_routes\\node_modules\\@tanstack\\react-query\\src\\queryOptions.ts"],"sourcesContent":["import type { DefaultError, QueryKey } from '@tanstack/query-core'\nimport type { UseQueryOptions } from './types'\n\nexport type UndefinedInitialDataOptions<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = UseQueryOptions<TQueryFnData, TError, TData, TQueryKey> & {\n  initialData?: undefined\n}\n\ntype NonUndefinedGuard<T> = T extends undefined ? never : T\n\nexport type DefinedInitialDataOptions<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = UseQueryOptions<TQueryFnData, TError, TData, TQueryKey> & {\n  initialData:\n    | NonUndefinedGuard<TQueryFnData>\n    | (() => NonUndefinedGuard<TQueryFnData>)\n}\n\nexport function queryOptions<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n  TOptions extends UndefinedInitialDataOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey\n  > = UndefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n>(options: TOptions): TOptions\n\nexport function queryOptions<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n  TOptions extends DefinedInitialDataOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey\n  > = DefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n>(options: TOptions): TOptions\n\nexport function queryOptions(options: unknown) {\n  return options\n}\n"],"mappings":";AAmDO,SAASA,aAAaC,OAAA,EAAkB;EAC7C,OAAOA,OAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}