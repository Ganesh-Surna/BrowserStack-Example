{"ast":null,"code":"import _objectSpread from \"C:/Users/GaneshSurna/Desktop/New React/Practice_routes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\GaneshSurna\\\\Desktop\\\\New React\\\\Practice_routes\\\\src\\\\components\\\\Dashboard\\\\TestCaseDetails.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Modal from \"../../UI/Modal\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { fetchEventDetails } from \"../../util/http\";\nimport ErrorBlock from \"../ErrorBlock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestCaseDetails() {\n  _s();\n  var params = useParams();\n  var navigate = useNavigate();\n  var _useQuery = useQuery({\n      queryKey: [\"events\", {\n        id: params.id\n      }],\n      queryFn: function queryFn(_ref) {\n        var signal = _ref.signal,\n          queryKey = _ref.queryKey;\n        return fetchEventDetails(_objectSpread({\n          signal: signal\n        }, queryKey[1]));\n      }\n    }),\n    data = _useQuery.data,\n    isPending = _useQuery.isPending,\n    isError = _useQuery.isError,\n    error = _useQuery.error;\n  var handleClose = function handleClose() {\n    navigate(\"/dashboard/folder\");\n  };\n  var content;\n  if (isPending) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this);\n  }\n  if (isError) {\n    var _error$info;\n    content = /*#__PURE__*/_jsxDEV(ErrorBlock, {\n      message: ((_error$info = error.info) === null || _error$info === void 0 ? void 0 : _error$info.message) || \"Failed to fetch event details!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this);\n  }\n  if (data) {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"event-image\",\n        src: data.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: handleClose,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(TestCaseDetails, \"DBXjm/fJUYAiIkRmDVsMH9l1RDE=\", false, function () {\n  return [useParams, useNavigate, useQuery];\n});\n_c = TestCaseDetails;\nvar _c;\n$RefreshReg$(_c, \"TestCaseDetails\");","map":{"version":3,"names":["useNavigate","useParams","Modal","useQuery","fetchEventDetails","ErrorBlock","jsxDEV","_jsxDEV","TestCaseDetails","_s","params","navigate","_useQuery","queryKey","id","queryFn","_ref","signal","_objectSpread","data","isPending","isError","error","handleClose","content","children","fileName","_jsxFileName","lineNumber","columnNumber","_error$info","message","info","title","description","className","src","image","onClose","_c","$RefreshReg$"],"sources":["C:/Users/GaneshSurna/Desktop/New React/Practice_routes/src/components/Dashboard/TestCaseDetails.js"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport Modal from \"../../UI/Modal\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { fetchEventDetails } from \"../../util/http\";\r\nimport ErrorBlock from \"../ErrorBlock\";\r\n\r\nexport default function TestCaseDetails(){\r\n    const params= useParams();\r\n    const navigate=useNavigate();\r\n\r\n    const { data, isPending, isError, error } = useQuery({\r\n        queryKey: [\"events\", {id: params.id}],\r\n        queryFn: ({signal, queryKey})=>fetchEventDetails({signal, ...queryKey[1]}),\r\n    })\r\n\r\n    const handleClose=()=>{\r\n        navigate(\"/dashboard/folder\");\r\n    }\r\n\r\n    let content;\r\n\r\n    if(isPending){\r\n        content=<p>Loading...</p>;\r\n    }\r\n    if(isError){\r\n        content=<ErrorBlock message={error.info?.message || \"Failed to fetch event details!!\"}/>;\r\n    }\r\n\r\n    if(data){\r\n        <div>\r\n            <h2>{data.title}</h2>\r\n            <p>{data.description}</p>\r\n            <img className=\"event-image\" src={data.image} />\r\n            <p>{data.image}</p>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <Modal onClose={handleClose}>\r\n            {content}\r\n        </Modal>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}